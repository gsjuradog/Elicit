[{"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\index.js":"1","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\App.js":"2","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\reportWebVitals.js":"3","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Copyrigth\\copyrigth.js":"4","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Projects\\projects.js":"5","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Project\\project.js":"6","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\loginform\\loginForm.js":"7","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\loginform\\styles.js":"8","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\styles.js":"9","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\Dashboard.js":"10","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\listItems.js":"11","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\styles.js":"12","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\Activity.js":"13","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\Title.js":"14","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Header\\Header.js":"15","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Header\\styles.js":"16","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Projects\\styles.js":"17","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Project\\styles.js":"18","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\recentProj.js":"19","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\cardImage\\FullImageCard.js":"20","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\cardImage\\CardModifications.js":"21","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\cardImage\\styles.js":"22","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Nav\\Nav.js":"23","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\firebase\\config.js":"24","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\UploadForm\\UploadForm.js":"25","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\ProgressBar.js\\ProgressBar.js":"26","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\hooks\\useStorage.js":"27","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\LoginPage\\LoginPage.js":"28","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\SignUp\\styles.js":"29","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\DashboardHome\\DashboardHome.js":"30","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\SignUp\\SignUp.js":"31","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\HomePage\\HomePage.js":"32","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\HomePage\\styles.js":"33","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\UploadForm\\styles.js":"34","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\AudioRecorder\\AudioRecorder.js":"35","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\AudioRecorder\\styles.js":"36","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\ProjectForm\\ProjectForm.js":"37","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\ProjectForm\\styles.js":"38","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Tasks\\TaskForm.js":"39","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\hooks\\useFireStore.js":"40","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\ShowProjects.js":"41","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\AppBarLogged.js":"42","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\DashboardHome\\styles.js":"43","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Forms\\ProjectTasksForm.js":"44","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Tasks\\Task.js":"45","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Tasks\\TaskList.js":"46","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\loginform\\ParticipantLogIn.js":"47","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\ProgressBar.js\\styles.js":"48","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\UploadForm\\Form.js":"49","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\ProgressBar.js\\AudioProgressBar.js":"50","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Answers\\Answer.js":"51","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Answers\\styles.js":"52"},{"size":527,"mtime":1610790549266,"results":"53","hashOfConfig":"54"},{"size":4663,"mtime":1613140035111,"results":"55","hashOfConfig":"54"},{"size":362,"mtime":499162500000,"results":"56","hashOfConfig":"54"},{"size":402,"mtime":1610733795974,"results":"57","hashOfConfig":"54"},{"size":945,"mtime":1611070381182,"results":"58","hashOfConfig":"54"},{"size":1805,"mtime":1611220812267,"results":"59","hashOfConfig":"54"},{"size":2876,"mtime":1611089129545,"results":"60","hashOfConfig":"54"},{"size":486,"mtime":1611094569844,"results":"61","hashOfConfig":"54"},{"size":561,"mtime":1610989049228,"results":"62","hashOfConfig":"54"},{"size":3008,"mtime":1610990618222,"results":"63","hashOfConfig":"64"},{"size":2568,"mtime":1611077835830,"results":"65","hashOfConfig":"54"},{"size":2066,"mtime":1610799932112,"results":"66","hashOfConfig":"54"},{"size":2472,"mtime":1610724698893,"results":"67","hashOfConfig":"54"},{"size":343,"mtime":1610657293530,"results":"68","hashOfConfig":"54"},{"size":1962,"mtime":1611090342094,"results":"69","hashOfConfig":"54"},{"size":563,"mtime":1611085492188,"results":"70","hashOfConfig":"54"},{"size":774,"mtime":1610711725876,"results":"71","hashOfConfig":"72"},{"size":637,"mtime":1611066728059,"results":"73","hashOfConfig":"54"},{"size":327,"mtime":1610995935678,"results":"74","hashOfConfig":"54"},{"size":1481,"mtime":1611062638872,"results":"75","hashOfConfig":"54"},{"size":1029,"mtime":1610735890263,"results":"76","hashOfConfig":"54"},{"size":567,"mtime":1611011925267,"results":"77","hashOfConfig":"54"},{"size":1498,"mtime":1611076265543,"results":"78","hashOfConfig":"54"},{"size":836,"mtime":1613139692646,"results":"79","hashOfConfig":"54"},{"size":1092,"mtime":1613138343898,"results":"80","hashOfConfig":"54"},{"size":857,"mtime":1611108918369,"results":"81","hashOfConfig":"54"},{"size":4401,"mtime":1611113541199,"results":"82","hashOfConfig":"54"},{"size":321,"mtime":1611089802540,"results":"83","hashOfConfig":"54"},{"size":486,"mtime":1610646921345,"results":"84","hashOfConfig":"54"},{"size":989,"mtime":1610996360295,"results":"85","hashOfConfig":"54"},{"size":3451,"mtime":1610800988184,"results":"86","hashOfConfig":"54"},{"size":806,"mtime":1610806740250,"results":"87","hashOfConfig":"64"},{"size":272,"mtime":1610806522272,"results":"88","hashOfConfig":"64"},{"size":641,"mtime":1611095440381,"results":"89","hashOfConfig":"54"},{"size":2677,"mtime":1613137951781,"results":"90","hashOfConfig":"54"},{"size":699,"mtime":1610840166291,"results":"91","hashOfConfig":"54"},{"size":2040,"mtime":1611220812458,"results":"92","hashOfConfig":"54"},{"size":368,"mtime":1610909314995,"results":"93","hashOfConfig":"54"},{"size":2131,"mtime":1611220812472,"results":"94","hashOfConfig":"54"},{"size":2348,"mtime":1611100385721,"results":"95","hashOfConfig":"54"},{"size":384,"mtime":1611050873422,"results":"96","hashOfConfig":"54"},{"size":2166,"mtime":1611077566781,"results":"97","hashOfConfig":"54"},{"size":374,"mtime":1610996311177,"results":"98","hashOfConfig":"54"},{"size":723,"mtime":1611008971353,"results":"99","hashOfConfig":"64"},{"size":823,"mtime":1611067781097,"results":"100","hashOfConfig":"64"},{"size":1076,"mtime":1611220812508,"results":"101","hashOfConfig":"54"},{"size":4553,"mtime":1613138481486,"results":"102","hashOfConfig":"54"},{"size":215,"mtime":1611096744620,"results":"103","hashOfConfig":"54"},{"size":2504,"mtime":1613136511327,"results":"104","hashOfConfig":"54"},{"size":873,"mtime":1611113541200,"results":"105","hashOfConfig":"54"},{"size":1755,"mtime":1613138343959,"results":"106","hashOfConfig":"54"},{"size":699,"mtime":1611112668853,"results":"107","hashOfConfig":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"15rk7to",{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"4oy9uv",{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rz034k",{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"110"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\index.js",[],["234"],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\App.js",["235","236"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Container, Grow } from '@material-ui/core';\nimport Header from './components/Header/Header';\nimport Copyright from './components/Copyrigth/copyrigth';\nimport useStyles from './styles';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport SignUp from './components/SignUp/SignUp';\n// import HomePage from './components/HomePage/HomePage';\nimport UploadForm from './components/UploadForm/UploadForm';\nimport AudioRecorder from './components/AudioRecorder/AudioRecorder';\nimport ProjectForm from './components/ProjectForm/ProjectForm';\nimport TaskForm from './components/Tasks/TaskForm';\nimport { addProjectsDB, addTask } from './components/hooks/useStorage';\nimport { useGetOneProject, useGetTasks } from './components/hooks/useFireStore';\nimport Projects from './components/Projects/projects';\nimport ShowProjects from './components/Dashboard/ShowProjects';\nimport AppBarLogged from './components/Dashboard/AppBarLogged';\nimport DashboardHome from './components/DashboardHome/DashboardHome';\nimport ParticipantLogIn from './components/loginform/ParticipantLogIn';\nimport Answer from './components/Answers/Answer';\nimport Project from './components/Project/project';\nconsole.log(process.env.REACT_APP_APIKEY);\nfunction App() {\n  const classes = useStyles();\n  const [logIn, setLogIn] = useState(false);\n  const [participantLogIn, setParticipantLogIn] = useState(false);\n  //mising routes so tests with flag pruebas\n  const pruebas = true;\n\n  if (pruebas) {\n    return (\n      <>\n        {logIn ? (\n          <Router>\n            <div className={classes.root}>\n              <AppBarLogged setLogIn={setLogIn} />\n              <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                  <Switch>\n                    <Route path=\"/\" exact render={(props) => <DashboardHome {...props} />} />\n                    <Route path=\"/projects\" exact render={(props) => <ShowProjects {...props} />} />\n                    <Route\n                      path=\"/projects/:handle\"\n                      render={(props) => (\n                        <Project\n                          {...props}\n                          useGetTasks={useGetTasks}\n                          useGetOneProject={useGetOneProject}\n                        />\n                      )}\n                    />\n                    <Route\n                      path=\"/createProject\"\n                      render={(props) => <ProjectForm {...props} addProjectsDB={addProjectsDB} />}\n                    />\n                    <Route\n                      path=\"/createTask\"\n                      render={(props) => <TaskForm {...props} addTask={addTask} />}\n                    />\n                  </Switch>\n                </Container>\n              </main>\n            </div>\n          </Router>\n        ) : (\n          <Router>\n            <div>\n              <Header logIn={logIn} participantLogIn={participantLogIn} />\n              <Grow in>\n                <Container>\n                  <Switch>\n                    <Route path=\"/AudioRecorder\" exact component={AudioRecorder}></Route>\n\n                    <Route\n                      path=\"/\"\n                      exact\n                      render={(props) => <LoginPage {...props} setLogIn={setLogIn} />}\n                    />\n\n                    <Route\n                      path=\"/participant\"\n                      render={(props) => (\n                        <ParticipantLogIn {...props} setParticipantLogIn={setParticipantLogIn} />\n                      )}\n                    />\n                    <Route\n                      path=\"/uploadImage\"\n                      render={(props) => <UploadForm {...props} useGetTasks={useGetTasks} />}\n                    />\n                    <Route\n                      path=\"/answer\"\n                      render={(props) => <Answer {...props} addProjectsDB={addProjectsDB} />}\n                    />\n                  </Switch>\n                  <Copyright />\n                </Container>\n              </Grow>\n            </div>\n          </Router>\n        )}\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Router>\n          <Header />\n          <SignUp></SignUp>\n          <UploadForm></UploadForm>\n          {/* <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Projects cards={cards}></Projects>\n        </Container>\n        <Copyright /> */}\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\reportWebVitals.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Copyrigth\\copyrigth.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Projects\\projects.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Project\\project.js",["237","238"],"import React from 'react';\nimport { CardContent, Grid, Paper } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n// import EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './styles';\nimport TaskList from '../Tasks/TaskList';\nimport Title from '../Dashboard/Title';\nimport clsx from 'clsx';\n\nconst Project = (props) => {\n  const classes = useStyles();\n  //comes from fullImageProj\n  const { title } = props.location.state;\n  const { description } = props.location.state;\n  //Comes frome useFireStore and App\n  const content = props.useGetOneProject(title);\n  const { tasks } = props.useGetTasks('projects', title);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        {/* Project title and desc */}\n        <Grid item xs={12}>\n          <Paper className={fixedHeightPaper}>\n            <Grid className={classes.projContainer} item xs={12} md={10} lg={11}>\n              <Title>{title}</Title>\n              <CardContent>\n                <Typography variant=\"body1\">{description}</Typography>\n              </CardContent>\n            </Grid>\n          </Paper>\n        </Grid>\n        {/* Tasks */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Title>Tasks for this project</Title>\n            <TaskList tasks={tasks} />\n            <div className={classes.seeMore}>\n              <Link\n                color=\"primary\"\n                to={{ pathname: '/createTask', state: { projectTitle: `${title}` } }}>\n                Add task\n              </Link>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Project;\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\loginform\\loginForm.js",["239","240"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport useStyles from './styles';\n\nconst LoginForm = ({ setLogIn }) => {\n  //no security here\n  const [user, setUser] = useState({ email: '', password: '' });\n  const classes = useStyles();\n\n  function handleChanges(e) {\n    const value = e.target.value;\n    setUser((user) => ({\n      ...user,\n      [e.target.name]: value,\n    }));\n  }\n  //moking participant or researcher login\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLogIn(true);\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            // autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}>\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}></Box>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\loginform\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\Dashboard.js",["241","242"],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\listItems.js",["243","244","245","246"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListItem, ListItemIcon, ListItemText, ListSubheader } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AddCircleIcon from '@material-ui/icons/AddCircleOutline';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\nexport const MainListItems = () => {\n  // function handleClick(path) {\n  //   history.push(path);\n  // }\n  return (\n    <div>\n      <ListItem button component={Link} to=\"/\">\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Home\" />\n      </ListItem>\n\n      <ListItem button component={Link} to=\"/projects\">\n        <ListItemIcon>\n          <ListAltIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"projects\" />\n      </ListItem>\n      <ListItem button component={Link} to=\"/createProject\">\n        <ListItemIcon>\n          <AddCircleIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Create project\" />\n      </ListItem>\n      {/* future layers of dev */}\n      {/* <ListItem button>\n        <ListItemIcon>\n          <BarChartIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Reports\" />\n      </ListItem>\n      <ListItem button>\n        <ListItemIcon>\n          <LayersIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Integrations\" />\n      </ListItem> */}\n    </div>\n  );\n};\n\nexport const SecondaryListItems = ({ setLogIn }) => {\n  const handleClick = () => {\n    setLogIn(false);\n  };\n  return (\n    <div>\n      <ListSubheader inset>Saved reports</ListSubheader>\n      <ListItem button component={Link} to=\"/test\">\n        <ListItemIcon>\n          <AssignmentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Current proyect\" />\n      </ListItem>\n      <ListItem button component={Link} to=\"/test2\">\n        <ListItemIcon>\n          <AssignmentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Proyect B\" />\n      </ListItem>\n      <ListItem button component={Link} to=\"/\" onClick={handleClick}>\n        <ListItemIcon>\n          <ExitToAppIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Log out\" />\n      </ListItem>\n    </div>\n  );\n};\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\Activity.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\Title.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Header\\Header.js",["247"],"import React from 'react';\n// import clsx from 'clsx';\nimport { AppBar, Typography } from '@material-ui/core';\n// import Badge from '@material-ui/core/Badge';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Nav from '../Nav/Nav';\n\n// import NotificationsIcon from '@material-ui/icons/Notifications';\nimport useStyles from './styles';\n\n/* <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n  <Typography className={classes.heading} variant=\"h3\" align=\"center\">\n    Elicit\n  </Typography>\n</AppBar> */\n\nconst Header = ({ logIn, participantLogIn }) => {\n  const classes = useStyles();\n  return (\n    <>\n      {participantLogIn ? (\n        <div className={classes.root}>\n          <AppBar className={classes.appBar} position=\"static\">\n            <Toolbar>\n              <Nav />\n              <Typography variant=\"h5\" className={classes.title}>\n                Elicit\n              </Typography>\n              {/* <Button\n                variant=\"contained\"\n                color=\"primary\"\n                classname={classes.button}\n                component={Link}\n                to=\"/participant\">\n                Participant\n              </Button> */}\n            </Toolbar>\n          </AppBar>\n        </div>\n      ) : (\n        <div className={classes.root}>\n          <AppBar className={classes.appBar} position=\"static\">\n            <Toolbar>\n              <Nav />\n              <Typography variant=\"h5\" className={classes.title}>\n                Elicit\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                classname={classes.button}\n                component={Link}\n                to=\"/participant\">\n                Participant\n              </Button>\n            </Toolbar>\n          </AppBar>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Header;\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Header\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Projects\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Project\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\recentProj.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\cardImage\\FullImageCard.js",["248"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport { FiCard, FiCardActionArea, FiCardContent, FiCardMedia } from './CardModifications';\nimport useStyles from './styles';\n\nconst FullImageProject = ({ title, description }) => {\n  const CapitalizedDesc = description.charAt(0).toUpperCase() + description.slice(1);\n  const pathTitle = title.replace(/\\s/g, '').trim();\n  const classes = useStyles();\n  const url = null;\n  var img = url ? url : 'https://source.unsplash.com/random';\n  return (\n    <Box className={classes.box}>\n      <FiCard className={classes.card}>\n        <FiCardActionArea\n          component={Link}\n          to={{\n            pathname: `/projects/${pathTitle}`,\n            state: { description: `${CapitalizedDesc}`, title: `${title}` },\n          }}>\n          <FiCardMedia media=\"picture\" alt=\"Contemplative Reptile\" title=\"Image title\" />\n          <FiCardContent className={classes.fiCardContent}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              className={classes.fiCardContentTextSecondary}\n              component=\"p\">\n              {CapitalizedDesc}\n            </Typography>\n          </FiCardContent>\n        </FiCardActionArea>\n      </FiCard>\n    </Box>\n  );\n};\n\nexport default FullImageProject;\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\cardImage\\CardModifications.js",[],["249"],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\cardImage\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Nav\\Nav.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\firebase\\config.js",["250"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconsole.log(process.env.REACT_APP_APIKEY);\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAuv09ygP67re-9b3SKLyKyWmPur68ey5g',\n  authDomain: 'elicit-5039d.firebaseapp.com',\n  projectId: 'elicit-5039d',\n  storageBucket: 'elicit-5039d.appspot.com',\n  messagingSenderId: '698379837235',\n  appId: '1:698379837235:web:2e1bd830a420c094bc6846',\n  measurementId: 'G-KBWY7EP07S',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst projectStorage = firebase.storage();\nconst dbFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, dbFirestore, timestamp };\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\UploadForm\\UploadForm.js",["251"],"import { Container } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport AudioRecorder from '../AudioRecorder/AudioRecorder';\nimport useStyles from './styles';\nimport Form from './Form';\n\nfunction UploadForm(props) {\n  const classes = useStyles();\n\n  const [showAudio, setShowAudio] = useState(null);\n  const [finished, setFinished] = useState(null);\n  //this makes the conection to the useStorage hook trough progressbar\n  //wich in turn will store the file that is being given in firestore\n  const { project, name, code } = props.location.state.user;\n\n  const { tasks } = props.useGetTasks('projects', project);\n\n  if (finished) {\n    return <h1>Gracias</h1>;\n  } else {\n    return (\n      <Container>\n        {showAudio ? (\n          <AudioRecorder showAudio={showAudio} setFinished={setFinished}></AudioRecorder>\n        ) : (\n          <Form\n            setShowAudio={setShowAudio}\n            tasks={tasks}\n            project={project}\n            name={name}\n            code={code}></Form>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default UploadForm;\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\ProgressBar.js\\ProgressBar.js",["252"],"import React, { useEffect } from 'react';\n\nimport { useStorage } from '../hooks/useStorage';\nimport useStyles from './styles';\n\nconst ProgressBar = ({ setShowAudio, file, setFile, data }) => {\n  //this makes the conection to the useStorage hook\n  //wich in turn will store the file that is being given in firestore\n  const { url, progress } = useStorage(file, data);\n  console.log(history);\n  //history not being pushed BUG\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n      setShowAudio({ url: url, data: data });\n    }\n  }, [url]); //this last element is the one that is being observed, at the moment it changes useEfect happens\n\n  //As style is just for one element i prefer to add it here\n\n  const classes = useStyles();\n\n  return <div className={classes.progressBar} style={{ width: progress + '%' }}></div>;\n};\nexport default ProgressBar;\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\hooks\\useStorage.js",["253","254","255"],"import { useState, useEffect } from 'react';\nimport { projectStorage, dbFirestore, timestamp } from '../../firebase/config';\n\nexport async function addTask(data, projectTitle) {\n  const createdAt = timestamp();\n  const title = data.task;\n  await dbFirestore\n    .collection('projects')\n    .doc(projectTitle)\n    .collection('tasks')\n    .doc(title)\n    .set({ data, createdAt, projectTitle })\n    // eslint-disable-next-line\n    .then(console.log('task created'))\n    .catch(function (error) {\n      // eslint-disable-next-line\n      console.error('Error writing document: ', error);\n    });\n}\n\nexport async function addProjectsDB(data) {\n  const createdAt = timestamp();\n  const title = data.title;\n\n  await dbFirestore\n    .collection('projects')\n    .doc(title)\n    .set({ data, createdAt })\n    // eslint-disable-next-line\n    .then(console.log('Project created'))\n    .catch(function (error) {\n      // eslint-disable-next-line\n      console.error('Error writing document: ', error);\n    });\n}\n\nexport function useStorage(file, data) {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  console.log(data, 'useStorage');\n  const taskTitle = data.taskTitle;\n  const projectTitle = data.projectTitle;\n  const title = data ? data.taskTitle : 'no extra info';\n  const participant = data.name;\n\n  useEffect(() => {\n    //references\n    //The .ref method is telling the storage that the reference to the file has the name passed\n    let img = 'no image';\n    const fileType = file.type;\n    const storageRef = file.name\n      ? projectStorage.ref(file.name)\n      : projectStorage.ref().child(`audios/${file.size}`);\n    //To interact with the DB a collection is created\n    const collectionRef = dbFirestore\n      .collection('projects')\n      .doc(projectTitle)\n      .collection('tasks')\n      .doc(taskTitle)\n      .collection('answers')\n      .doc(participant);\n    //this one is async & takes a snapshot in time of the upload at that moment\n    storageRef.put(file).on(\n      'state_changed',\n      (snap) => {\n        //percentage of upload\n\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      async () => {\n        //getting the url of file\n        const url = await storageRef.getDownloadURL();\n        //storing url of files\n        const createdAt = timestamp();\n        if (fileType === 'audio/wav') {\n          img = url;\n        }\n        collectionRef.set({ url, createdAt, fileType, title, participant }, { merge: true });\n        setUrl(url);\n      }\n    );\n  }, [file]);\n\n  return { progress, url, error };\n}\n\nexport function useStorageAudio(file, data) {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n\n  console.log(data, 'useStorage');\n  const taskTitle = data.taskTitle;\n  const projectTitle = data.projectTitle;\n  const title = data ? data.taskTitle : 'no extra info';\n  const participant = data.name;\n\n  useEffect(() => {\n    //references\n    //The .ref method is telling the storage that the reference to the file has the name passed\n\n    const fileType = file.type;\n    const storageRef = file.name\n      ? projectStorage.ref(file.name)\n      : projectStorage.ref().child(`audios/${file.size}`);\n    //To interact with the DB a collection is created\n    const collectionRef = dbFirestore\n      .collection('projects')\n      .doc(projectTitle)\n      .collection('tasks')\n      .doc(taskTitle)\n      .collection('answers')\n      .doc(participant);\n    //this one is async & takes a snapshot in time of the upload at that moment\n    storageRef.put(file).on(\n      'state_changed',\n      (snap) => {\n        //percentage of upload\n\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      async () => {\n        //getting the url of file\n        const audioUrl = await storageRef.getDownloadURL();\n        //storing url of files\n        const createdAt = timestamp();\n\n        collectionRef.set({ audioUrl, createdAt, fileType, title, participant }, { merge: true });\n        setAudioUrl(audioUrl);\n      }\n    );\n  }, [file]);\n\n  return { progress, audioUrl, error };\n}\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\LoginPage\\LoginPage.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\SignUp\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\DashboardHome\\DashboardHome.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\SignUp\\SignUp.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\HomePage\\HomePage.js",[],["256"],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\HomePage\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\UploadForm\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\AudioRecorder\\AudioRecorder.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\AudioRecorder\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\ProjectForm\\ProjectForm.js",["257"],"import React, { useState } from 'react';\nimport { Paper, Button, TextField, Typography, Grid } from '@material-ui/core';\nimport useStyles from './styles';\n\nfunction ProjectForm({ addProjectsDB, history }) {\n  const classes = useStyles();\n  const [project, setProject] = useState({\n    title: '',\n    description: '',\n  });\n\n  function redirect() {\n    history.push('/dashboard');\n  }\n\n  function handleChanges(e) {\n    const value = e.target.value;\n    setProject((event) => ({\n      ...event,\n      [e.target.name]: value,\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!project.title || !project.description) return alert('Title and description are necesary');\n\n    addProjectsDB(project);\n    console.log(project.title);\n    redirect();\n    // setTitleAndDesc({ title: project.title, description: project.description });\n    setProject({\n      title: '',\n      description: '',\n    });\n  }\n\n  return (\n    <>\n      <Paper className={classes.paper}>\n        <form></form>\n        <Typography variant=\"h6\" gutterBottom>\n          Create project\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              fullWidth\n              onChange={handleChanges}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"Description\"\n              multiline\n              rowsMax={6}\n              name=\"description\"\n              label=\"Description of project max 250 words\"\n              inputProps={{ maxLength: 250 }}\n              fullWidth\n              onChange={handleChanges}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button className={classes.button} variant=\"contained\" onClick={handleSubmit}>\n              Create\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n\nexport default ProjectForm;\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\ProjectForm\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Tasks\\TaskForm.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\hooks\\useFireStore.js",["258"],"import { useState, useEffect } from 'react';\nimport { dbFirestore } from '../../firebase/config';\n\nexport function useFireStore(collection) {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    //it is const unsub becase it is going to return a function used to unsubscribe from the collection\n    // eslint-disable-next-line\n\n    const unSub = dbFirestore\n      .collection(collection)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot((snap) => {\n        let documents = [];\n        snap.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n\n        setDocs(documents);\n      });\n\n    return () => {\n      //cleanup function\n      unSub();\n    };\n  }, [collection]);\n\n  return { docs };\n}\n//find tasks\nexport function useGetTasks(collection, projectTitle) {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    //it is const unsub becase it is going to return a function used to unsubscribe from the collection\n    // eslint-disable-next-line\n\n    const unSub = dbFirestore\n      .collection(collection)\n      .doc(projectTitle)\n      .collection('tasks')\n      .orderBy('createdAt', 'desc')\n      .onSnapshot((snap) => {\n        console.log('taking snap');\n        let documents = [];\n        snap.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n\n        setTasks(documents);\n      });\n\n    return () => {\n      //cleanup function\n      unSub();\n    };\n  }, []);\n\n  return { tasks };\n}\n\n//find specific project\n\nexport function useGetOneProject(title) {\n  const [content, setContent] = useState({ data: { title: 'original data' } });\n  useEffect(() => {\n    // copy what you have in the other file\n    dbFirestore\n      .collection('projects')\n      .doc(title)\n      .get()\n      .then(function (doc) {\n        if (doc.exists) {\n          const docData = doc.data();\n          // eslint-disable-next-line\n          console.log('Document data get one project:', docData);\n          setContent(docData);\n        } else {\n          // doc.data() will be undefined in this case\n          // eslint-disable-next-line\n          console.log('No such document!');\n        }\n      })\n      .catch(function (error) {\n        // eslint-disable-next-line\n        console.log('Error getting document:', error);\n      });\n  }, []);\n  return content;\n}\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\ShowProjects.js",["259"],"import React from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport useStyles from './styles';\nimport Projects from '../Projects/projects';\n\nfunction ShowProjects({ history }) {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n      <Paper className={classes.paper}>\n        <Projects />\n      </Paper>\n    </Grid>\n  );\n}\nexport default ShowProjects;\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Dashboard\\AppBarLogged.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\DashboardHome\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Forms\\ProjectTasksForm.js",["260"],"import React, { useState } from 'react';\nimport Title from '../Dashboard/Title';\nimport ProjectForm from '../ProjectForm/ProjectForm';\nimport TaskForm from '../Tasks/TaskForm';\n\nfunction ProjectTaskForm({ addProjectsDB }) {\n  const [titleAndDesc, setTitleAndDesc] = useState({});\n  console.log(titleAndDesc);\n\n  return (\n    <>\n      {titleAndDesc ? (\n        <>\n          <Title>{titleAndDesc.title}</Title>\n          <TaskForm></TaskForm>\n        </>\n      ) : (\n        <>\n          <ProjectForm\n            setTitleAndDesc={setTitleAndDesc}\n            addProjectsDB={addProjectsDB}></ProjectForm>\n          <TaskForm></TaskForm>\n        </>\n      )}\n    </>\n  );\n}\nexport default ProjectTaskForm;\n",["261"],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Tasks\\Task.js",["262","263","264"],"import { Paper, Typography, Container, Grid } from '@material-ui/core';\nimport { Table, TableBody, TableCell, TableRow, TableHead } from '@material-ui/core';\nimport React from 'react';\nimport useStyles from '../../styles';\n\nexport default function Task({ title, questions }) {\n  const classes = useStyles();\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Task</TableCell>\n            <TableCell>Sub-Tasks</TableCell>\n          </TableRow>\n        </TableHead>\n      </Table>\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Typography>{title}</Typography>\n          </Grid>\n          <Typography>{questions}</Typography>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n",["265"],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Tasks\\TaskList.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\loginform\\ParticipantLogIn.js",["266","267"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport { useFireStore } from '../hooks/useFireStore';\nimport useStyles from './styles';\n\nconst ParticipantLogin = ({ setParticipantLogIn, history }) => {\n  //no security here\n  const [user, setUser] = useState({ name: '', code: '', project: '' });\n  const [selectedProj, setSelectedProj] = useState(null);\n\n  const classes = useStyles();\n  //access database\n  const { docs } = useFireStore('projects');\n\n  function redirect() {\n    history.push({ pathname: '/uploadImage', state: { user: user } });\n  }\n\n  function handleChanges(e) {\n    const value = e.target.value;\n    setUser((user) => ({\n      ...user,\n      [e.target.name]: value,\n    }));\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    redirect();\n    setParticipantLogIn(true);\n    setUser({ name: '', code: '', project: '' });\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Log in to participate\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            onChange={handleChanges}\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"Name\"\n            // autoFocus\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            onChange={handleChanges}\n            fullWidth\n            name=\"code\"\n            label=\"code\"\n            type=\"code\"\n            id=\"code\"\n            autoComplete=\"code\"\n          />\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"outlined-selectProject\">Project</InputLabel>\n            <Select\n              native\n              value={user.project}\n              onChange={handleChanges}\n              label=\"project\"\n              inputProps={{\n                name: 'project',\n                id: 'outlined-selectProject',\n              }}>\n              <option aria-label=\"None\" value=\"\" />\n              {docs.map((doc) => (\n                <option key={doc.data.title} value={doc.data.title}>\n                  {doc.data.title}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n          {/*future implementation */}\n          {/* {selectedProj && (\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel htmlFor=\"outlined-selectProject\">Task</InputLabel>\n              <Select\n                native\n                value={user.project}\n                onChange={handleChangesOnTask}\n                label=\"project\"\n                inputProps={{\n                  name: 'project',\n                  id: 'outlined-selectProject',\n                }}>\n                <option aria-label=\"None\" value=\"\" />\n                {docs.map((doc) => (\n                  <option key={doc.data.title} value={doc.data.title}>\n                    {doc.data.title}\n                  </option>\n                ))}\n              </Select>\n            </FormControl>\n          )} */}\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Accept privacy policies\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}>\n            Participate\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}></Box>\n    </Container>\n  );\n};\n\nexport default ParticipantLogin;\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\ProgressBar.js\\styles.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\UploadForm\\Form.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\ProgressBar.js\\AudioProgressBar.js",[],"D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Answers\\Answer.js",["268"],"import React from 'react';\nimport { Box, Card, CardActions, CardContent, CardMedia, Container } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\n// import EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport useStyles from './styles';\n\nexport default function Answer() {\n  const classes = useStyles();\n  return (\n    <>\n      <Box className={classes.cardContainer}>\n        <Container className={classes.cardGrid} justify=\"space-between\">\n          <Card className={classes.card}>\n            <CardMedia\n              className={classes.cardMedia}\n              image={\n                'https://firebasestorage.googleapis.com/v0/b/elicit-5039d.appspot.com/o/lavado-manos%20tiny.jpg?alt=media&token=f25333b4-96c9-4c8f-b8a1-c14fa2cc0c26'\n              }\n              title=\"Image title\"\n            />\n            <CardContent className={classes.cardContent}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {/* {data.name} */}\n              </Typography>\n              <Typography gutterBottom variant=\"body2\" component=\"h4\">\n                {/* <p>{data.questions}</p> */}\n              </Typography>\n              {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n              <audio\n                src={\n                  'https://firebasestorage.googleapis.com/v0/b/elicit-5039d.appspot.com/o/audios%2F29846?alt=media&token=9a07a91d-3fa1-420d-9282-a26d82ebb6f4'\n                }\n                controls\n                controlsList=\"nodownload\"\n                autoPlay>\n                {' '}\n                <trac></trac>\n              </audio>\n            </CardContent>\n            <CardActions></CardActions>\n          </Card>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","D:\\Users\\San\\Documents\\GitHub\\Elicit\\client\\src\\components\\Answers\\styles.js",[],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":16,"column":8,"nodeType":"273","messageId":"274","endLine":16,"endColumn":16},{"ruleId":"275","severity":1,"message":"276","line":23,"column":1,"nodeType":"277","messageId":"278","endLine":23,"endColumn":12},{"ruleId":"271","severity":1,"message":"279","line":6,"column":8,"nodeType":"273","messageId":"274","endLine":6,"endColumn":14},{"ruleId":"271","severity":1,"message":"280","line":18,"column":9,"nodeType":"273","messageId":"274","endLine":18,"endColumn":16},{"ruleId":"271","severity":1,"message":"281","line":18,"column":10,"nodeType":"273","messageId":"274","endLine":18,"endColumn":14},{"ruleId":"271","severity":1,"message":"282","line":21,"column":12,"nodeType":"273","messageId":"274","endLine":21,"endColumn":25},{"ruleId":"271","severity":1,"message":"283","line":15,"column":8,"nodeType":"273","messageId":"274","endLine":15,"endColumn":20},{"ruleId":"275","severity":1,"message":"276","line":26,"column":3,"nodeType":"277","messageId":"278","endLine":26,"endColumn":14},{"ruleId":"271","severity":1,"message":"284","line":5,"column":8,"nodeType":"273","messageId":"274","endLine":5,"endColumn":25},{"ruleId":"271","severity":1,"message":"285","line":6,"column":8,"nodeType":"273","messageId":"274","endLine":6,"endColumn":18},{"ruleId":"271","severity":1,"message":"286","line":7,"column":8,"nodeType":"273","messageId":"274","endLine":7,"endColumn":20},{"ruleId":"271","severity":1,"message":"287","line":8,"column":8,"nodeType":"273","messageId":"274","endLine":8,"endColumn":18},{"ruleId":"271","severity":1,"message":"288","line":19,"column":19,"nodeType":"273","messageId":"274","endLine":19,"endColumn":24},{"ruleId":"271","severity":1,"message":"289","line":13,"column":7,"nodeType":"273","messageId":"274","endLine":13,"endColumn":10},{"ruleId":"269","replacedBy":"290"},{"ruleId":"275","severity":1,"message":"276","line":7,"column":1,"nodeType":"277","messageId":"278","endLine":7,"endColumn":12},{"ruleId":"271","severity":1,"message":"291","line":8,"column":9,"nodeType":"273","messageId":"274","endLine":8,"endColumn":16},{"ruleId":"275","severity":1,"message":"276","line":10,"column":3,"nodeType":"277","messageId":"278","endLine":10,"endColumn":14},{"ruleId":"275","severity":1,"message":"276","line":42,"column":3,"nodeType":"277","messageId":"278","endLine":42,"endColumn":14},{"ruleId":"271","severity":1,"message":"289","line":82,"column":11,"nodeType":"273","messageId":"274","endLine":82,"endColumn":14},{"ruleId":"275","severity":1,"message":"276","line":98,"column":3,"nodeType":"277","messageId":"278","endLine":98,"endColumn":14},{"ruleId":"269","replacedBy":"292"},{"ruleId":"275","severity":1,"message":"276","line":29,"column":5,"nodeType":"277","messageId":"278","endLine":29,"endColumn":16},{"ruleId":"275","severity":1,"message":"276","line":45,"column":9,"nodeType":"277","messageId":"278","endLine":45,"endColumn":20},{"ruleId":"271","severity":1,"message":"293","line":6,"column":25,"nodeType":"273","messageId":"274","endLine":6,"endColumn":32},{"ruleId":"275","severity":1,"message":"276","line":8,"column":3,"nodeType":"277","messageId":"278","endLine":8,"endColumn":14},{"ruleId":"269","replacedBy":"294"},{"ruleId":"271","severity":1,"message":"295","line":1,"column":10,"nodeType":"273","messageId":"274","endLine":1,"endColumn":15},{"ruleId":"271","severity":1,"message":"296","line":2,"column":17,"nodeType":"273","messageId":"274","endLine":2,"endColumn":26},{"ruleId":"271","severity":1,"message":"291","line":7,"column":9,"nodeType":"273","messageId":"274","endLine":7,"endColumn":16},{"ruleId":"269","replacedBy":"297"},{"ruleId":"271","severity":1,"message":"298","line":21,"column":10,"nodeType":"273","messageId":"274","endLine":21,"endColumn":22},{"ruleId":"271","severity":1,"message":"299","line":21,"column":24,"nodeType":"273","messageId":"274","endLine":21,"endColumn":39},{"ruleId":"271","severity":1,"message":"279","line":5,"column":8,"nodeType":"273","messageId":"274","endLine":5,"endColumn":14},"jsx-a11y/accessible-emoji",[],"no-unused-vars","'Projects' is defined but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected","'Button' is defined but never used.","'content' is assigned a value but never used.","'user' is assigned a value but never used.","'handleChanges' is defined but never used.","'ShowProjects' is defined but never used.","'AssignmentIndIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'LayersIcon' is defined but never used.","'logIn' is defined but never used.","'img' is assigned a value but never used.",[],"'classes' is assigned a value but never used.",[],"'history' is defined but never used.",[],"'Paper' is defined but never used.","'TableBody' is defined but never used.",[],"'selectedProj' is assigned a value but never used.","'setSelectedProj' is assigned a value but never used."]